{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      url\n    } = _ref;\n    this.url = void 0;\n    this.url = url;\n  }\n  getUsers(sortParam, pagination, searchParam) {\n    const searchAuery = {\n      $or: [{\n        name: {\n          $regex: \"searchParam\",\n          $options: \"i\"\n        }\n      }, {\n        email: {\n          $regex: \"searchParam\",\n          $options: \"i\"\n        }\n      }, {\n        phone: {\n          $regex: \"searchParam\",\n          $options: \"i\"\n        }\n      }]\n    };\n    return fetch(`${this.url}users?sortBy=${sortParam.name}&order=${sortParam.order ? \"desc\" : \"\"}&page=${pagination.page}&limit=${pagination.limit}&q=${searchParam}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._handleResponse);\n  }\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\nexport const api = new Api({\n  url: \"https://641de2fd0596099ce156cb4d.mockapi.io/api/\"\n});","map":{"version":3,"names":["Api","constructor","_ref","url","getUsers","sortParam","pagination","searchParam","searchAuery","$or","name","$regex","$options","email","phone","fetch","order","page","limit","method","headers","then","_handleResponse","res","ok","json","Promise","reject","status","api"],"sources":["/Users/serhiiborodulin/Documents/task_for_H2O/src/utils/api.ts"],"sourcesContent":["class Api {\n  private url: string;\n\n  constructor({ url }: { url: string }) {\n    this.url = url;\n  }\n\n  getUsers(\n    sortParam: { name: string; order: boolean },\n    pagination: { page: number; limit: number },\n    searchParam: string\n  ) {\n    const searchAuery = {\n      $or: [\n        { name: { $regex: \"searchParam\", $options: \"i\" } },\n        { email: { $regex: \"searchParam\", $options: \"i\" } },\n        { phone: { $regex: \"searchParam\", $options: \"i\" } },\n      ],\n    };\n\n    return fetch(\n      `${this.url}users?sortBy=${sortParam.name}&order=${\n        sortParam.order ? \"desc\" : \"\"\n      }&page=${pagination.page}&limit=${pagination.limit}&q=${searchParam}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then(this._handleResponse);\n  }\n\n  private _handleResponse(res: Response) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\n\nexport const api = new Api({\n  url: \"https://641de2fd0596099ce156cb4d.mockapi.io/api/\",\n});\n"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EAGRC,WAAWA,CAAAC,IAAA,EAA2B;IAAA,IAA1B;MAAEC;IAAqB,CAAC,GAAAD,IAAA;IAAA,KAF5BC,GAAG;IAGT,IAAI,CAACA,GAAG,GAAGA,GAAG;EAChB;EAEAC,QAAQA,CACNC,SAA2C,EAC3CC,UAA2C,EAC3CC,WAAmB,EACnB;IACA,MAAMC,WAAW,GAAG;MAClBC,GAAG,EAAE,CACH;QAAEC,IAAI,EAAE;UAAEC,MAAM,EAAE,aAAa;UAAEC,QAAQ,EAAE;QAAI;MAAE,CAAC,EAClD;QAAEC,KAAK,EAAE;UAAEF,MAAM,EAAE,aAAa;UAAEC,QAAQ,EAAE;QAAI;MAAE,CAAC,EACnD;QAAEE,KAAK,EAAE;UAAEH,MAAM,EAAE,aAAa;UAAEC,QAAQ,EAAE;QAAI;MAAE,CAAC;IAEvD,CAAC;IAED,OAAOG,KAAK,CACT,GAAE,IAAI,CAACZ,GAAI,gBAAeE,SAAS,CAACK,IAAK,UACxCL,SAAS,CAACW,KAAK,GAAG,MAAM,GAAG,EAC5B,SAAQV,UAAU,CAACW,IAAK,UAASX,UAAU,CAACY,KAAM,MAAKX,WAAY,EAAC,EACrE;MACEY,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC,CAACC,IAAI,CAAC,IAAI,CAACC,eAAe,CAAC;EAC9B;EAEQA,eAAeA,CAACC,GAAa,EAAE;IACrC,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IACA;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAChD;AACF;AAEA,OAAO,MAAMC,GAAG,GAAG,IAAI7B,GAAG,CAAC;EACzBG,GAAG,EAAE;AACP,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}